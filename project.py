# -*- coding: utf-8 -*-
"""project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IJp6HGBHdcE8__LqIggKCDFYRiDCBDxO
"""

from bs4 import BeautifulSoup                                                   # import the BeautifulSoup library to extract data from HTML files
import requests                                                                 # import the requests library to fetch the HTML code from a URL  
url = BeautifulSoup('https://www.worldometers.info/coronavirus/','html.parser') # create a BeautifulSoup object from the URL
code = requests.get(url)                                                        # fetch the HTML code from the URL
raw_code = code.text                                                            # extract the text from the HTML code
raw_code = BeautifulSoup(raw_code,"lxml")                                       # create a new BeautifulSoup object from the raw HTML code
table_code = raw_code.table                                                     # extract the table element from the HTML code
tags = table_code.find_all('tr')                                                # extract all the rows (tr) from the table

data = []                                                                       # create an empty list to store the data
for i in tags:                                                                  # iterate over each row and extract its text
  data.append(i.text)

all_data = []                                                                   # create a new list to store the cleaned data
for i in data:                                                                  # iterate over each row in the data list and split it into a list of values
  all_data.append(i.split('\n'))

final_data = []                                                                 # remove any empty rows from the all_data list and store it in final_data
for i in all_data:
  if i[1] != "":
    final_data.append(i[1:])

import csv                                                                      # write the final data to a CSV file
with open("covid_data.csv",'w') as f:
  x = csv.writer(f)
  x.writerows(final_data)

import pandas as pd                                                             # read the CSV file into a pandas dataframe
df = pd.read_csv('covid_data.csv',index_col = "#")

df

x = list(df['Country,Other'])[0:10]
ya = list(df['TotalCases'])[0:10]
yb = list(df['TotalRecovered'])[0:10]
yc = list(df['ActiveCases'])[0:10]
y1 = list(map(lambda y: int(y.replace(",","")),ya))
y2 = list(map(lambda y: int(y.replace(",","")),yb))
y3 = list(map(lambda y: int(y.replace(",","")),yc))

import plotly.graph_objects as go
fig = go.Figure([go.Bar(x=x,y=y1)])
fig.show()


fig = go.Figure(data =[
     go.Bar(name='Total Cases', x=x, y=y1),
     go.Bar(name='Total Recovered', x=x, y=y2),
     go.Bar(name='New recovered', x=x, y=y3)
])
fig.update_layout(barmode = 'group')
fig.show()

import matplotlib.pyplot as plt

# Create a figure and axis
fig, ax = plt.subplots()

# Create a bar chart of the top 10 countries with the most COVID-19 cases
ax.bar(x, y1)

# Set the title and labels
ax.set_title("Top 10 Countries with the Most COVID-19 Cases")
ax.set_xlabel("Country")
ax.set_ylabel("Total Cases (millions)")

# Rotate the x-axis labels for better readability
plt.xticks(rotation=45)

# Display the plot
plt.show()

import matplotlib.pyplot as plt

# Create a figure and axis object
fig, ax = plt.subplots()

# Set the x-axis labels and values
x_labels = x
x_values = range(len(x_labels))

# Create the bars for the total confirmed cases
ax.bar(x_values, y1, color='red', label='Total Confirmed Cases')

# Create the bars for the total recovered cases
ax.bar(x_values, y2, bottom=y1, color='green', label='Total Recovered Cases')

# Create the bars for the active cases
ax.bar(x_values, y3, bottom=[sum(i) for i in zip(y1, y2)], color='blue', label='Active Cases')

# Set the title and labels for the chart
ax.set_title('Top 10 Countries with Highest Total Confirmed Cases of COVID-19')
ax.set_xlabel('Country')
ax.set_ylabel('Number of Cases')

# Set the tick marks and labels for the x-axis
ax.set_xticks(x_values)
ax.set_xticklabels(x_labels, rotation=90)

# Set the legend for the chart
ax.legend()

# Show the chart
plt.show()

import matplotlib.pyplot as plt

# Create a scatter plot with three sets of data: total confirmed cases, total recovered cases, and active cases
plt.scatter(x, y1, c='red', label='Total Confirmed Cases', alpha=0.5)
plt.scatter(x, y2, c='green', label='Total Recovered Cases', alpha=0.5)
plt.scatter(x, y3, c='blue', label='Active Cases', alpha=0.5)

# Set the title and labels for the chart
plt.title('Top 10 Countries with Highest Total Confirmed Cases of COVID-19')
plt.xlabel('Country')
plt.ylabel('Number of Cases')

# Set the tick marks and labels for the x-axis
plt.xticks(rotation=90)

# Set the legend for the chart
plt.legend()

# Show the chart
plt.show()l



